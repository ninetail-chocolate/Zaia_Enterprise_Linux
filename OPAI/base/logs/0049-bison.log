  GEN      public-submodule-commit
make  check-recursive
make[1]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
Making check in po
make[2]: Entering directory '/usr/oppai/base/bison-3.8.1/build/po'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/po'
Making check in runtime-po
make[2]: Entering directory '/usr/oppai/base/bison-3.8.1/build/runtime-po'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/runtime-po'
Making check in gnulib-po
make[2]: Entering directory '/usr/oppai/base/bison-3.8.1/build/gnulib-po'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/gnulib-po'
Making check in .
make[2]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
  GEN      ../doc/bison.help
make  examples/c/bistromathic/bistromathic examples/c/calc/calc examples/c/glr/c++-types examples/c/lexcalc/lexcalc examples/c/mfcalc/mfcalc examples/c/pushcalc/calc examples/c/reccalc/reccalc examples/c/rpcalc/rpcalc examples/c++/calc++/calc++ examples/c++/glr/c++-types examples/c++/simple examples/c++/variant examples/c++/variant-11   ./tests/bison tests/atconfig tests/atlocal
make[3]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
  YACC     examples/c/bistromathic/parse.c
  YACC     examples/c/calc/calc.c
  YACC     examples/c/glr/c++-types.c
  YACC     examples/c/lexcalc/parse.c
  LEX      examples/c/lexcalc/scan.c
  YACC     examples/c/mfcalc/mfcalc.c
  YACC     examples/c/pushcalc/calc.c
  YACC     examples/c/reccalc/parse.c
  YACC     examples/c/rpcalc/rpcalc.c
make[3]: 'tests/bison' is up to date.
make[3]: Nothing to be done for 'tests/atconfig'.
  YACC     examples/c++/variant-11.cc
  YACC     examples/c++/calc++/parser.stamp
  LEX      examples/c++/calc++/scanner.cc
make[3]: 'tests/atlocal' is up to date.
  YACC     examples/c++/glr/c++-types.stamp
  YACC     examples/c++/simple.cc
  YACC     examples/c++/variant.cc
updating examples/c/calc/calc.output
updating examples/c/calc/calc.h
  CC       examples/c/calc/examples_c_calc_calc-calc.o
updating examples/c/lexcalc/parse.output
updating examples/c/bistromathic/parse.output
updating examples/c/rpcalc/rpcalc.output
updating examples/c/lexcalc/parse.h
  CC       examples/c/lexcalc/examples_c_lexcalc_lexcalc-parse.o
  CC       examples/c/lexcalc/examples_c_lexcalc_lexcalc-scan.o
updating examples/c/bistromathic/parse.h
updating examples/c/mfcalc/mfcalc.output
  CC       examples/c/bistromathic/bistromathic-parse.o
updating examples/c/rpcalc/rpcalc.h
  CC       examples/c/rpcalc/examples_c_rpcalc_rpcalc-rpcalc.o
updating examples/c++/simple.output
updating examples/c/reccalc/parse.output
updating examples/c/mfcalc/mfcalc.h
updating examples/c/pushcalc/calc.output
  CC       examples/c/mfcalc/examples_c_mfcalc_mfcalc-mfcalc.o
updating examples/c++/variant.output
updating examples/c/glr/c++-types.output
updating examples/c++/simple.hh
updating examples/c/reccalc/parse.h
updating examples/c++/variant-11.output
  CXX      examples/c++/simple-simple.o
updating examples/c/pushcalc/calc.h
  CC       examples/c/reccalc/examples_c_reccalc_reccalc-parse.o
  CC       examples/c/reccalc/examples_c_reccalc_reccalc-scan.o
  CC       examples/c/pushcalc/examples_c_pushcalc_calc-calc.o
updating examples/c++/variant.hh
updating examples/c/glr/c++-types.h
  CXX      examples/c++/calc++/calc__-driver.o
  CXX      examples/c++/calc++/calc__-scanner.o
  CXX      examples/c++/calc++/calc__-calc++.o
updating examples/c++/variant-11.hh
  CXX      examples/c++/calc++/calc__-parser.o
  CC       examples/c/glr/examples_c_glr_c___types-c++-types.o
  CXX      examples/c++/variant_11-variant-11.o
  CXX      examples/c++/variant-variant.o
  CCLD     examples/c/rpcalc/rpcalc
  CXX      examples/c++/glr/examples_c___glr_c___types-c++-types.o
  CCLD     examples/c/mfcalc/mfcalc
  CCLD     examples/c/calc/calc
  CCLD     examples/c/pushcalc/calc
  CCLD     examples/c/lexcalc/lexcalc
  CCLD     examples/c/reccalc/reccalc
  CCLD     examples/c/bistromathic/bistromathic
  CCLD     examples/c/glr/c++-types
  CXXLD    examples/c++/simple
  CXXLD    examples/c++/variant-11
  CXXLD    examples/c++/variant
  CXXLD    examples/c++/calc++/calc++
  CXXLD    examples/c++/glr/c++-types
make[3]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
make  check-TESTS check-local
make[3]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
make  all-recursive
make[4]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
make[4]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
Making all in po
make[5]: Entering directory '/usr/oppai/base/bison-3.8.1/build/po'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/po'
Making all in runtime-po
make[5]: Entering directory '/usr/oppai/base/bison-3.8.1/build/runtime-po'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/runtime-po'
Making all in gnulib-po
make[5]: Entering directory '/usr/oppai/base/bison-3.8.1/build/gnulib-po'
make[5]: Nothing to be done for 'all'.
make[5]: Leaving directory '/usr/oppai/base/bison-3.8.1/build/gnulib-po'
Making all in .
PASS: examples/c++/simple.test
PASS: examples/c/glr/c++-types.test
PASS: examples/c++/variant.test
PASS: examples/c++/glr/c++-types.test
PASS: examples/c++/variant-11.test
PASS: examples/c/mfcalc/mfcalc.test
PASS: examples/c/calc/calc.test
PASS: examples/c/pushcalc/calc.test
PASS: examples/c/lexcalc/lexcalc.test
PASS: examples/c/rpcalc/rpcalc.test
PASS: examples/c/reccalc/reccalc.test
make[5]: Entering directory '/usr/oppai/base/bison-3.8.1/build'
PASS: examples/c++/calc++/calc++.test
PASS: examples/c/bistromathic/bistromathic.test
============================================================================
Testsuite summary for GNU Bison 3.8.1
============================================================================
# TOTAL: 13
# PASS:  13
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[4]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
  GEN      ../doc/bison.help
make[5]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
make[4]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
/bin/sh ../tests/testsuite -C tests -j24
## --------------------------- ##
## GNU Bison 3.8.1 test suite. ##
## --------------------------- ##

  5: Invalid inputs with {}                          ok
  9: Invalid symbol declarations                     ok
 13: Invalid $n and @n                               ok
 21: Per-type %printer and %destructor redeclared    ok
 22: Undefined symbols                               ok
 20: Default %printer and %destructor redeclared     ok
 14: Type Clashes                                    ok
  3: Invalid options                                 ok
  1: Generating Comments                             ok
 19: Symbol class redefinition                       ok
  2: Invalid number of arguments                     ok
  4: Invalid inputs                                  ok
 12: Symbol declarations                             ok
 28: Token collisions                                ok
 34: Require 100.0                                   ok
 31: Typed symbol aliases                            ok
 33: Require 3.8.1                                   ok
 38: Unclosed constructs                             ok
 32: Require 1.0                                     ok
 37: Numbered tokens                                 ok
 35: String aliases for character tokens             ok
 41: %prec takes a token                             ok
 39: %start after first rule                         ok
 29: Incompatible Aliases                            ok
 45: errors                                          ok
 10: Redefining the error token                      ok
 47: "%define" Boolean variables                     ok
  6: Yacc warnings on symbols                        ok
 51: "%define" file variables                        ok
 26: Unused values with per-type %destructor         ok
 23: Unassociated types used for a printer or destructor ok
 44: Multiple %code                                  ok
 18: EOF redeclared                                  ok
 17: Symbol redeclared                               ok
 52: "%define" backward compatibility                ok
  8: Yacc's %type                                    ok
 56: Bad escapes in literals                         ok
 11: Dangling aliases                                ok
 46: %define, --define, --force-define               ok
 27: Duplicate string                                ok
 50: "%define" enum variables                        ok
  7: Yacc warnings                                   ok
 55: Bad character literals                          ok
 42: %prec's token must be defined                   ok
 65: Unput's effect on locations                     ok
 30: Torturing the Scanner                           ok
 68: Character literals and api.token.raw            ok
 70: Invalid file prefix mapping arguments           ok
 57: Unexpected end of file                          ok
 69: %token-table and parse.error                    ok
 72: Undefined and ambiguous references              ok
 43: Reject unused %code qualifiers                  ok
 60: %name-prefix and api.prefix are incompatible    ok
 75: Missing identifiers in brackets                 ok
 74: Many kinds of errors                            ok
 76: Redundant words in brackets                     ok
 77: Comments in brackets                            ok
 36: Symbols                                         ok
 64: Deprecated directives                           ok
 25: Unused values with default %destructor          ok
 78: Stray symbols in brackets                       ok
 81: Unresolved references                           ok
 79: Redundant words in LHS brackets                 ok
 67: Cannot type action                              ok
 53: Unused api.pure                                 ok
 66: Non-deprecated directives                       ok
 80: Factored LHS                                    ok
 89: Output files:  --fixed-output-files -dv -g --html skipped (output.at:95)
 90: Output files:  -Hfoo.header -v -gfoo.gv --html=foo.html skipped (output.at:97)
 71: Tutorial calculator                             ok
 62: Stray $ or @                                    ok
 84: Output files:  -dv >&-                          ok
 83: Output files:  -dv                              ok
 86: Output files:  -dv -y                           ok
 88: Output files:  -dv -o foo.tab.c                 ok
 61: Redefined %union name                           ok
 85: Output files:  -dv -o foo.c                     ok
 87: Output files: api.header.include={"./foo.h"} -dv -y ok
 73: Misleading references                           ok
 94: Output files:  -dv -g --xml -o y.tab.c          ok
 91: Output files:  -dv -g --xml --fixed-output-files ok
 92: Output files:  -dv -g --xml -y                  ok
 93: Output files: %require "3.4" -dv -g --xml -y    ok
 96: Output files:  -dv -g -o foo.c                  ok
 99: Output files: %header %verbose %yacc            ok
 98: Output files: %header %verbose %yacc            ok
 48: "%define" code variables                        ok
 97: Output files: %header %verbose                  ok
 95: Output files:  -dv -b bar                       ok
100: Output files: %file-prefix "bar" %header %verbose  ok
101: Output files: %output "bar.c" %header %verbose %yacc  ok
 54: C++ namespace reference errors                  ok
103: Output files: %header %verbose                  ok
 49: "%define" keyword variables                     ok
102: Output files: %file-prefix "baz" %output "bar.c" %header %verbose %yacc  ok
104: Output files: %header %verbose  -o foo.c        ok
109: Output files: %type <foo> useless --header --graph --xml --report=all -Wall -Werror ok
107: Output files: %header "foo.hpp" -o foo.c++      ok
106: Output files:  --header=foo.hpp -o foo.c++      ok
108: Output files:  -o foo.c++ --graph=foo.gph       ok
116: Output files: lalr1.cc %verbose %locations      ok
105: Output files:  --header=foo.hpp -o foo.c++      ok
115: Output files: lalr1.cc %header %verbose         ok
111: Output files: %defines -o foo.c++               ok
114: Output files: lalr1.cc %verbose                 ok
113: Output files: lalr1.cc                          ok
112: Output files: %defines "foo.hpp" -o foo.c++     ok
117: Output files: lalr1.cc %header %verbose %locations  ok
 40: Duplicate %start symbol                         ok
110: Output files: useless=--header --graph --xml --report=all -Wall -Werror ok
 82: $ or @ followed by . or -                       ok
122: Output files: lalr1.cc %header %locations api.location.file=none %require "3.2"  ok
123: Output files: lalr1.cc %header %locations api.location.file="foo.loc.hh" %require "3.2"  ok
118: Output files: lalr1.cc %header %verbose         ok
120: Output files: lalr1.cc %header %verbose %file-prefix "output_dir/foo"  ok
119: Output files: lalr1.cc %header %verbose %locations -o subdir/foo.cc ok
128: Conflicting output files:  -o foo.y             ok
124: Output files: lalr1.cc %header %locations api.location.file="$at_dir/foo.loc.hh" %require "3.2"  ok
121: Output files: lalr1.cc %header %locations %verbose %file-prefix "output_dir/foo"  ok
 24: Useless printers or destructors                 ok
 58: LAC: Errors for %define                         ok
138: Graph with no conflicts                         ok
139: Graph with unsolved S/R                         ok
145: Warnings                                        skipped (diagnostics.at:84)
140: Graph with solved S/R                           ok
141: Graph with R/R                                  ok
146: Single point locations                          skipped (diagnostics.at:133)
142: Graph with reductions with multiple LAT         ok
 63: Code injection                                  ok
147: Line is too short, and then you die             skipped (diagnostics.at:182)
149: Tabulations and multibyte characters            skipped (diagnostics.at:235)
150: Tabulations and multibyte characters            skipped (diagnostics.at:282)
148: Zero-width characters                           skipped (diagnostics.at:217)
153: Carriage return                                 skipped (diagnostics.at:351)
151: Special files                                   skipped (diagnostics.at:303)
125: Conflicting output files:  --graph="foo.tab.c"  ok
127: Conflicting output files: lalr1.cc %header %locations --graph="location.hh" ok
155: Screen width: 200 columns                       skipped (diagnostics.at:399)
154: CR NL                                           skipped (diagnostics.at:372)
157: Screen width: 60 columns                        skipped (diagnostics.at:465)
152: Complaints from M4                              skipped (diagnostics.at:328)
156: Screen width: 80 columns                        skipped (diagnostics.at:432)
126: Conflicting output files: %header "foo.output" -v ok
160: Deep Counterexamples                            skipped (diagnostics.at:645)
158: Suggestions                                     skipped (diagnostics.at:504)
159: Counterexamples                                 skipped (diagnostics.at:527)
143: Graph with a reduction rule both enabled and disabled ok
164: Boolean=variables: invalid skeleton defaults    ok
167: Fatal errors but M4 continues producing output  ok
166: Fatal errors make M4 exit immediately           ok
162: Relative skeleton file names                    ok
168: Nullable                                        ok
169: Broken Closure                                  ok
170: Firsts                                          ok
171: Accept                                          ok
174: Reduced Grammar with prec and assoc             ok
165: Complaining during macro argument expansion     ok
 59: -Werror combinations                            ok
175: Useless Terminals                               ok
161: Indentation with message suppression            ok
181: Bad start symbols                               ok
172: Build relations                                 ok
163: Installed skeleton file names                   ok
182: no lr.type: Single State Split                  ok
183: lr.type=lalr: Single State Split                ok
173: Reduced Grammar                                 ok
176: Useless Nonterminals                            ok
184: lr.type=ielr: Single State Split                ok
178: Useless Parts                                   ok
180: Underivable Rules                               ok
179: Reduced Automaton                               ok
185: lr.type=canonical-lr: Single State Split        ok
177: Useless Rules                                   ok
187: lr.type=lalr: Lane Split                        ok
186: no lr.type: Lane Split                          ok
190: no lr.type: Complex Lane Split                  ok
189: lr.type=canonical-lr: Lane Split                ok
188: lr.type=ielr: Lane Split                        ok
193: lr.type=canonical-lr: Complex Lane Split        ok
196: lr.type=ielr: Split During Added Lookahead Propagation ok
192: lr.type=ielr: Complex Lane Split                ok
 16: Unused values before symbol declarations        ok
202: Reports                                         skipped (report.at:75)
191: lr.type=lalr: Complex Lane Split                ok
198: no lr.default-reduction                         ok
 15: Unused values                                   ok
197: lr.type=canonical-lr: Split During Added Lookahead Propagation ok
203: Reports with conflicts                          skipped (report.at:3130)
136: Output file name: [                             ok
129: Output file name: `~!@#$%^&*()-=_+{}[]|\:;<>, .' ok
135: Output file name: @}                            ok
137: Output file name: ]                             ok
131: Output file name: )                             ok
199: lr.default-reduction=most                       ok
205: Token declaration order: literals vs. identifiers ok
132: Output file name: #                             ok
130: Output file name: (                             ok
134: Output file name: @{                            ok
200: lr.default-reduction=consistent                 ok
213: parse.error=verbose and consistent errors: lr.type=ielr java skipped (conflicts.at:523)
201: lr.default-reduction=accepting                  ok
133: Output file name: @@                            ok
195: lr.type=lalr: Split During Added Lookahead Propagation ok
204: Token declaration order                         ok
210: parse.error=verbose and consistent errors: lr.type=ielr ok
194: no lr.type: Split During Added Lookahead Propagation ok
214: parse.error=verbose and consistent errors: lr.type=ielr lr.default-reduction=consistent ok
215: parse.error=verbose and consistent errors: lr.type=ielr lr.default-reduction=accepting ok
223: parse.error=verbose and consistent errors: lr.default-reduction=consistent ok
218: parse.error=verbose and consistent errors: lr.type=ielr parse.lac=full ok
221: parse.error=verbose and consistent errors:      ok
206: Useless associativity warning                   ok
225: parse.error=verbose and consistent errors: lr.type=canonical-lr ok
231: %precedence suffices                            ok
216: parse.error=verbose and consistent errors: lr.type=canonical-lr ok
217: parse.error=verbose and consistent errors: lr.type=canonical-lr parse.lac=full ok
230: Resolved SR Conflicts                           ok
207: Useless precedence warning                      ok
211: parse.error=verbose and consistent errors: lr.type=ielr %glr-parser ok
239: %expect not enough                              ok
224: parse.error=verbose and consistent errors: lr.default-reduction=accepting ok
241: %expect too much                                ok
243: %expect in grammar rule not enough              ok
226: parse.error=verbose and consistent errors: parse.lac=full ok
240: %expect right                                   ok
242: %expect with reduce conflicts                   ok
249: %expect-rr not enough in grammar rule           ok
246: %expect in grammar rule too much                ok
244: %expect in grammar rule right                   ok
247: %expect-rr in grammar rule                      ok
248: %expect-rr too much in grammar rule             ok
227: parse.error=verbose and consistent errors: parse.lac=full lr.default-reduction=accepting ok
245: %expect in grammar rules                        ok
250: %prec with user string                          ok
253: %default-prec                                   ok
252: %no-default-prec with %prec                     ok
208: S/R in initial                                  ok
255: Solved conflicts report for multiple reductions in a state ok
229: Unresolved SR Conflicts                         ok
222: parse.error=verbose and consistent errors: %glr-parser ok
232: %precedence does not suffice                    ok
238: Defaulted Conflicted Reduction                  ok
259: Unifying S/R                                    ok
260: Deep Unifying S/R                               ok
261: S/R Conflict with Nullable Symbols              ok
251: %no-default-prec without %prec                  ok
263: Non-unifying Unambiguous S/R                    ok
264: S/R after first token                           ok
265: Unifying R/R counterexample                     ok
233: Syntax error in consistent error state: yacc.c  ok
262: Non-unifying Ambiguous S/R                      ok
266: Non-unifying R/R LR(1) conflict                 ok
256: %nonassoc error actions for multiple reductions in a state ok
271: Non-unifying Prefix Share                       ok
275: %union syncline                                 skipped (synclines.at:214)
274: Prologue syncline                               skipped (synclines.at:194)
268: Cex Search Prepend                              ok
273: Deep Null Non-unifying                          ok
272: Deep Null Unifying                              ok
269: R/R cex with prec                               ok
276: %union name syncline                            skipped (synclines.at:254)
277: Postprologue syncline                           skipped (synclines.at:264)
278: Action syncline                                 skipped (synclines.at:291)
280: %code top syncline                              skipped (synclines.at:327)
234: Syntax error in consistent error state: glr.c   ok
279: Epilogue syncline                               skipped (synclines.at:310)
281: %destructor syncline                            skipped (synclines.at:346)
282: %printer syncline                               skipped (synclines.at:370)
257: %expect-rr non GLR                              ok
212: parse.error=verbose and consistent errors: lr.type=ielr c++ ok
209: %nonassoc and eof                               ok
290: %no-lines: lalr1.cc                             ok
288: %no-lines: yacc.c                               ok
254: Unreachable States After Conflict Resolution    ok
219: parse.error=verbose and consistent errors: c++ lr.type=canonical-lr parse.lac=full ok
293: Output columns                                  ok
283: syncline escapes: yacc.c                        ok
220: parse.error=verbose and consistent errors: c++ lr.type=ielr parse.lac=full ok
292: %no-lines: glr2.cc                              ok
289: %no-lines: glr.c                                ok
291: %no-lines: glr.cc                               ok
294: Invalid CPP guards:  --defines=input/input.h    ok
295: Invalid CPP guards:  --defines=9foo.h           ok
284: syncline escapes: glr.c                         ok
296: Invalid CPP guards: %glr-parser --defines=input/input.h ok
303: Sane headers: api.pure                          ok
299: Sane headers:                                   ok
304: Sane headers: api.push-pull=both                ok
297: Invalid CPP guards: %glr-parser --defines=9foo.h ok
235: Syntax error in consistent error state: lalr1.cc ok
305: Sane headers: api.pure api.push-pull=both       ok
300: Sane headers: %locations %debug                 ok
301: Sane headers: %glr-parser                       ok
314: Invalid uses of %empty                          ok
298: export YYLTYPE                                  ok
311: Midrule actions                                 ok
316: Add missing %empty                              ok
228: LAC: %nonassoc requires splitting canonical LR states ok
302: Sane headers: %locations %debug %glr-parser     ok
236: Syntax error in consistent error state: glr.cc  ok
144: C++ Output File Prefix Mapping                  ok
315: Valid uses of %empty                            ok
312: Typed midrule actions                           ok
319: Initial location: yacc.c api.pure %parse-param { int x } ok
318: Initial location: yacc.c api.pure=full          ok
317: Initial location: yacc.c                        ok
320: Initial location: yacc.c api.push-pull=both     ok
285: syncline escapes: lalr1.cc                      ok
321: Initial location: yacc.c api.push-pull=both api.pure=full ok
237: Syntax error in consistent error state: glr2.cc ok
322: Initial location: glr.c                         ok
286: syncline escapes: glr.cc                        ok
327: Initial location: yacc.c api.pure=full          ok
329: Location print: yacc.c                          ok
323: Initial location: glr.c api.pure                ok
313: Implicitly empty rule                           ok
328: Initial location: yacc.c api.pure=full          ok
330: Location print: glr.c                           ok
334: Exotic Dollars                                  ok
287: syncline escapes: glr2.cc                       ok
306: Sane headers: c++                               ok
335: Printers and Destructors                        ok
324: Initial location: lalr1.cc                      ok
336: Printers and Destructors with union             ok
325: Initial location: glr.cc                        ok
331: Location print: lalr1.cc                        ok
332: Location print: glr.cc                          ok
308: Sane headers: c++ api.value.type=variant parse.assert ok
337: Printers and Destructors: %glr-parser           ok
338: Printers and Destructors with union: %glr-parser ok
351: @$ in %initial-action implies %locations        ok
352: @$ in %destructor implies %locations            ok
353: @$ in %printer implies %locations               ok
354: Qualified $$ in actions: yacc.c                 ok
346: Default tagged and per-type %printer and %destructor ok
258: -W versus %expect and %expect-rr                ok
326: Initial location: glr2.cc                       ok
345: Default tagless %printer and %destructor        ok
348: Default %printer and %destructor are not for error or $undefined ok
349: Default %printer and %destructor are not for $accept ok
361: %union vs. api.value.type                       ok
362: %yacc vs. api.value.type=union                  ok
340: Printers and Destructors with union: %header lalr1.cc ok
359: Destroying lookahead assigned by semantic action ok
333: Location print: glr2.cc                         ok
339: Printers and Destructors: %header lalr1.cc      ok
341: Printers and Destructors: %header glr.cc        ok
365: yacc.c api.value.type={variant}                 ok
363: yacc.c api.value.type={double}                  ok
360: YYBACKUP                                        ok
364: yacc.c api.value.type={double} %header          ok
355: Qualified $$ in actions: glr.c                  ok
367: yacc.c api.value.type={struct foo}              ok
368: yacc.c api.value.type={struct foo} %header      ok
366: yacc.c api.value.type={variant} %header         ok
370: yacc.c api.value.type={struct bar} %header      ok
369: yacc.c api.value.type={struct bar}              ok
350: Default %printer and %destructor for midrule values ok
374: yacc.c %union { float fval; int ival; }; %header ok
371: yacc.c api.value.type={union foo}               ok
372: yacc.c api.value.type={union foo} %header       ok
342: Printers and Destructors with union: %header glr.cc ok
347: Default %printer and %destructor for user-defined end token ok
375: yacc.c %union foo { float fval; int ival; };    ok
373: yacc.c %union { float fval; int ival; };        ok
376: yacc.c %union foo { float fval; int ival; }; %header ok
377: yacc.c api.value.union.name=foo; %union { float fval; int ival; }; ok
307: Sane headers: %locations %debug c++             ok
309: Sane headers: %locations c++ %glr-parser        ok
378: yacc.c api.value.union.name=foo; %union { float fval; int ival; }; %header ok
379: yacc.c api.value.type=union                     ok
356: Qualified $$ in actions: lalr1.cc               ok
380: yacc.c api.value.type=union %header             ok
357: Qualified $$ in actions: glr.cc                 ok
383: glr.c api.value.type={variant}                  ok
385: glr.c api.value.type={struct foo}               ok
382: glr.c api.value.type={double} %header           ok
384: glr.c api.value.type={variant} %header          ok
343: Printers and Destructors: %header glr2.cc       ok
381: glr.c api.value.type={double}                   ok
391: glr.c %union { float fval; int ival; };         ok
388: glr.c api.value.type={struct bar} %header       ok
386: glr.c api.value.type={struct foo} %header       ok
389: glr.c api.value.type={union foo}                ok
390: glr.c api.value.type={union foo} %header        ok
387: glr.c api.value.type={struct bar}               ok
344: Printers and Destructors with union: %header glr2.cc ok
392: glr.c %union { float fval; int ival; }; %header ok
393: glr.c %union foo { float fval; int ival; };     ok
394: glr.c %union foo { float fval; int ival; }; %header ok
396: glr.c api.value.union.name=foo; %union { float fval; int ival; }; %header ok
397: glr.c api.value.type=union                      ok
395: glr.c api.value.union.name=foo; %union { float fval; int ival; }; ok
398: glr.c api.value.type=union %header              ok
358: Qualified $$ in actions: glr2.cc                ok
267: Non-unifying R/R LR(2) conflict                 ok
310: Several parsers                                 ok
419: lalr1.cc %code requires { #include <memory> } api.value.type=variant ok
400: lalr1.cc api.value.type={double} %header        ok
407: lalr1.cc api.value.type={union foo}             ok
399: lalr1.cc api.value.type={double}                ok
404: lalr1.cc api.value.type={struct foo} %header    ok
405: lalr1.cc api.value.type={struct bar}            ok
408: lalr1.cc api.value.type={union foo} %header     ok
401: lalr1.cc api.value.type={variant}               ok
409: lalr1.cc %union { float fval; int ival; };      ok
402: lalr1.cc api.value.type={variant} %header       ok
406: lalr1.cc api.value.type={struct bar} %header    ok
410: lalr1.cc %union { float fval; int ival; }; %header ok
414: lalr1.cc api.value.type=variant %header         ok
403: lalr1.cc api.value.type={struct foo}            ok
420: lalr1.cc %code requires { #include <memory> } api.value.type=variant %header ok
412: lalr1.cc api.value.type=union %header           ok
411: lalr1.cc api.value.type=union                   ok
417: lalr1.cc api.value.type=variant api.token.constructor ok
415: lalr1.cc api.value.type=variant                 ok
413: lalr1.cc api.value.type=variant                 ok
418: lalr1.cc api.value.type=variant api.token.constructor %header ok
416: lalr1.cc api.value.type=variant %header         ok
421: lalr1.cc %code requires { #include <memory> } api.value.type=variant api.token.constructor ok
270: Null nonterminals                               ok
422: lalr1.cc %code requires { #include <memory> } api.value.type=variant api.token.constructor %header ok
423: lalr1.cc %code requires { #include <memory> } api.value.type=variant api.token.constructor ok
424: lalr1.cc %code requires { #include <memory> } api.value.type=variant api.token.constructor %header ok
425: glr.cc api.value.type={double}                  ok
429: glr.cc api.value.type={struct foo}              ok
426: glr.cc api.value.type={double} %header          ok
428: glr.cc api.value.type={variant} %header         ok
435: glr.cc %union { float fval; int ival; };        ok
434: glr.cc api.value.type={union foo} %header       ok
453: lalr1.cc: Named %union                          ok
430: glr.cc api.value.type={struct foo} %header      ok
432: glr.cc api.value.type={struct bar} %header      ok
454: glr.cc: Named %union                            ok
437: glr.cc api.value.type=union                     ok
438: glr.cc api.value.type=union %header             ok
455: Token numbers: yacc.c                           ok
436: glr.cc %union { float fval; int ival; }; %header ok
456: Token numbers: yacc.c api.token.raw             ok
427: glr.cc api.value.type={variant}                 ok
431: glr.cc api.value.type={struct bar}              ok
433: glr.cc api.value.type={union foo}               ok
458: Token numbers: glr.c api.token.raw              ok
465: Token numbers: lalr1.d                          skipped (scanner.at:326)
457: Token numbers: glr.c                            ok
466: Token numbers: lalr1.d api.token.raw            skipped (scanner.at:326)
468: Token numbers: lalr1.java api.token.raw         skipped (scanner.at:326)
467: Token numbers: lalr1.java                       skipped (scanner.at:326)
460: Token numbers: lalr1.cc api.token.raw           ok
459: Token numbers: lalr1.cc                         ok
462: Token numbers: glr.cc api.token.raw             ok
461: Token numbers: glr.cc                           ok
469: Token numbers: lalr1.cc api.token.raw api.value.type=variant api.token.constructor ok
463: Token numbers: glr2.cc                          ok
464: Token numbers: glr2.cc api.token.raw            ok
471: Calculator %header                              ok
473: Calculator %locations api.location.type={Span}  ok
472: Calculator %debug %locations                    ok
470: Calculator parse.trace                          ok
474: Calculator %name-prefix "calc"                  ok
475: Calculator %verbose                             ok
478: Calculator parse.error=verbose                  ok
479: Calculator api.pure=full %locations             ok
477: Calculator parse.error=detailed                 ok
476: Calculator %yacc                                ok
481: Calculator parse.error=detailed %locations      ok
482: Calculator parse.error=detailed %locations %header api.prefix={calc} %verbose %yacc  ok
480: Calculator api.push-pull=both api.pure=full %locations  ok
483: Calculator parse.error=detailed %locations %header %name-prefix "calc" api.token.prefix={TOK_} %verbose %yacc  ok
484: Calculator %debug                               ok
485: Calculator parse.error=detailed %debug %locations %header %name-prefix "calc" %verbose %yacc  ok
486: Calculator parse.error=detailed %debug %locations %header api.prefix={calc} %verbose %yacc  ok
488: Calculator api.push-pull=both api.pure=full parse.error=detailed %debug %locations %header api.prefix={calc} %verbose %yacc  ok
441: glr2.cc api.value.type={variant}                ok
487: Calculator api.pure=full parse.error=detailed %debug %locations %header %name-prefix "calc" %verbose %yacc  ok
439: glr2.cc api.value.type={double}                 ok
489: Calculator api.pure parse.error=detailed %debug %locations %header api.prefix={calc} %verbose %yacc %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
440: glr2.cc api.value.type={double} %header         ok
491: Calculator %no-lines api.pure parse.error=verbose %debug %locations %header api.prefix={calc} %verbose %yacc %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
493: Calculator parse.error=custom                   ok
490: Calculator %no-lines api.pure parse.error=detailed %debug %locations %header api.prefix={calc} %verbose %yacc %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
492: Calculator %no-lines api.pure parse.error=verbose %debug %locations %defines api.prefix={calc} %verbose %yacc %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
494: Calculator parse.error=custom %locations api.prefix={calc}  ok
442: glr2.cc api.value.type={variant} %header        ok
495: Calculator parse.error=custom %locations api.prefix={calc} %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
497: Calculator parse.error=custom %locations api.prefix={calc} %parse-param {semantic_value *result}{int *count}{int *nerrs} api.push-pull=both api.pure=full parse.lac=full  ok
496: Calculator parse.error=custom %locations api.prefix={calc} %parse-param {semantic_value *result}{int *count}{int *nerrs} api.push-pull=both api.pure=full  ok
499: Calculator %start input exp NUM api.value.type=union %locations parse.error=detailed  ok
501: Calculator %glr-parser %header                  ok
500: Calculator %glr-parser                          ok
502: Calculator %glr-parser %locations               ok
503: Calculator %glr-parser %locations api.location.type={Span}  ok
498: Calculator %start input exp NUM api.value.type=union  ok
504: Calculator %glr-parser %name-prefix "calc"      ok
443: glr2.cc api.value.type={struct foo}             ok
506: Calculator %glr-parser %verbose                 ok
505: Calculator %glr-parser api.prefix={calc}        ok
508: Calculator %glr-parser api.pure %locations      ok
507: Calculator %glr-parser parse.error=verbose      ok
444: glr2.cc api.value.type={struct foo} %header     ok
509: Calculator %glr-parser parse.error=verbose %locations  ok
510: Calculator %glr-parser parse.error=custom %locations %header %name-prefix "calc" %verbose  ok
511: Calculator %glr-parser parse.error=detailed %locations %header %name-prefix "calc" %verbose  ok
513: Calculator %glr-parser parse.error=custom %locations %header %name-prefix "calc" %verbose  ok
512: Calculator %glr-parser parse.error=verbose %locations %header %name-prefix "calc" %verbose  ok
515: Calculator %glr-parser parse.error=verbose %debug %locations %header %name-prefix "calc" %verbose  ok
516: Calculator %glr-parser parse.error=verbose %debug %locations %header api.prefix={calc} api.token.prefix={TOK_} %verbose  ok
514: Calculator %glr-parser %debug                   ok
517: Calculator %glr-parser api.pure parse.error=verbose %debug %locations %header %name-prefix "calc" %verbose  ok
519: Calculator %glr-parser api.pure parse.error=verbose %debug %locations %header api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
518: Calculator %glr-parser api.pure parse.error=verbose %debug %locations %header %name-prefix "calc" %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
520: Calculator %glr-parser %no-lines api.pure parse.error=verbose %debug %locations %header api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
445: glr2.cc api.value.type={struct bar}             ok
523: Calculator C++ %locations                       ok
522: Calculator C++                                  ok
524: Calculator C++ %locations $NO_EXCEPTIONS_CXXFLAGS ok
527: Calculator C++ %locations parse.error=verbose api.prefix={calc} %verbose  ok
528: Calculator C++ %locations parse.error=verbose %debug %name-prefix "calc" %verbose  ok
525: Calculator C++ %locations api.location.type={Span}  ok
529: Calculator C++ %locations parse.error=verbose %debug api.prefix={calc} %verbose  ok
521: Calculator lalr1.cc %header                     ok
530: Calculator C++ %locations parse.error=verbose %debug api.prefix={calc} api.token.prefix={TOK_} %verbose  ok
446: glr2.cc api.value.type={struct bar} %header     ok
532: Calculator C++ parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
526: Calculator C++ %header %locations parse.error=verbose %name-prefix "calc" %verbose  ok
537: Calculator C++ %locations parse.lac=full parse.error=verbose  ok
538: Calculator C++ %locations parse.lac=full parse.error=detailed  ok
540: Calculator C++ parse.error=custom               ok
531: Calculator C++ %header %locations parse.error=verbose %debug %name-prefix "calc" %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
539: Calculator C++ %locations parse.lac=full parse.error=detailed parse.trace  ok
448: glr2.cc api.value.type={union foo} %header      ok
534: Calculator C++ %header %locations api.location.file=none  ok
542: Calculator C++ parse.error=custom %locations api.prefix={calc} %parse-param {semantic_value *result}{int *count}{int *nerrs} parse.lac=full  ok
541: Calculator C++ parse.error=custom %locations api.prefix={calc} %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
535: Calculator C++ %header %locations api.location.file="my-location.hh"  ok
533: Calculator C++ %header %locations parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
536: Calculator C++ %no-lines %header %locations api.location.file="my-location.hh"  ok
543: Calculator glr.cc                               ok
447: glr2.cc api.value.type={union foo}              ok
547: Calculator C++ %glr-parser %locations           ok
549: Calculator C++ %glr-parser %locations api.location.type={Span}  ok
545: Calculator C++ %glr-parser                      ok
449: glr2.cc %union { float fval; int ival; };       ok
567: Calculator lalr1.d                              skipped (calc.at:1499)
568: Calculator D                                    skipped (calc.at:1504)
548: Calculator glr2.cc %locations                   ok
544: Calculator glr2.cc                              ok
553: Calculator C++ %glr-parser parse.error=verbose api.prefix={calc} %verbose  ok
569: Calculator D %locations                         skipped (calc.at:1505)
571: Calculator D %debug                             skipped (calc.at:1509)
572: Calculator D parse.error=custom                 skipped (calc.at:1511)
451: glr2.cc api.value.type=union                    ok
570: Calculator D parse.error=detailed api.prefix={calc} %verbose  skipped (calc.at:1507)
550: Calculator glr2.cc %locations api.location.type={Span}  ok
546: Calculator glr2.cc                              ok
573: Calculator D %locations parse.error=custom      skipped (calc.at:1512)
574: Calculator D %locations parse.error=detailed    skipped (calc.at:1513)
577: Calculator D parse.error=detailed %debug api.symbol.prefix={SYMB_} api.token.prefix={TOK_} %verbose  skipped (calc.at:1516)
576: Calculator D parse.error=detailed %debug %verbose  skipped (calc.at:1515)
554: Calculator glr2.cc parse.error=verbose api.prefix={calc} %verbose  ok
575: Calculator D %locations parse.error=simple      skipped (calc.at:1514)
579: Calculator D %locations parse.lac=full parse.error=custom  skipped (calc.at:1519)
578: Calculator D %locations parse.lac=full parse.error=detailed  skipped (calc.at:1518)
450: glr2.cc %union { float fval; int ival; }; %header ok
580: Calculator D %locations parse.lac=full parse.error=detailed parse.trace  skipped (calc.at:1520)
581: Calculator D api.token.constructor %locations parse.error=custom api.value.type=union  skipped (calc.at:1525)
584: Calculator D parse.trace parse.error=custom %locations api.push-pull=both parse.lac=full  skipped (calc.at:1528)
452: glr2.cc api.value.type=union %header            ok
585: Calculator Java                                 skipped (calc.at:1539)
583: Calculator D api.push-pull=both                 skipped (calc.at:1527)
582: Calculator D api.token.constructor %locations parse.error=detailed  skipped (calc.at:1526)
555: Calculator C++ %glr-parser %debug               ok
586: Calculator Java parse.error=custom              skipped (calc.at:1540)
587: Calculator Java parse.error=detailed            skipped (calc.at:1541)
559: Calculator C++ %glr-parser parse.error=verbose %debug %name-prefix "calc" api.token.prefix={TOK_} %verbose  ok
588: Calculator Java parse.error=verbose             skipped (calc.at:1542)
592: Calculator Java parse.trace parse.error=verbose  skipped (calc.at:1546)
591: Calculator Java %locations parse.error=verbose  skipped (calc.at:1545)
589: Calculator Java %locations parse.error=custom   skipped (calc.at:1543)
594: Calculator Java api.push-pull=both              skipped (calc.at:1549)
596: Calculator Java parse.trace parse.error=custom %locations %lex-param {InputStream is} api.push-pull=both  skipped (calc.at:1551)
557: Calculator C++ %glr-parser parse.error=verbose %debug %name-prefix "calc" %verbose  ok
595: Calculator Java api.push-pull=both parse.error=detailed %locations  skipped (calc.at:1550)
597: Calculator Java parse.trace parse.error=verbose %locations %lex-param {InputStream is} api.push-pull=both  skipped (calc.at:1552)
590: Calculator Java %locations parse.error=detailed  skipped (calc.at:1544)
593: Calculator Java parse.trace parse.error=verbose %locations %lex-param {InputStream is}  skipped (calc.at:1547)
602: State number type: 128 states                   skipped (torture.at:270)
604: State number type: 256 states                   skipped (torture.at:272)
607: State number type: 65536 states                 skipped (torture.at:275)
605: State number type: 257 states                   skipped (torture.at:273)
598: Calculator Java parse.trace parse.error=custom %locations parse.lac=full  skipped (calc.at:1555)
603: State number type: 129 states                   skipped (torture.at:271)
608: State number type: 65537 states                 skipped (torture.at:276)
599: Calculator Java parse.trace parse.error=custom %locations api.push-pull=both parse.lac=full  skipped (calc.at:1556)
606: State number type: 32768 states                 skipped (torture.at:274)
556: Calculator glr2.cc %debug                       ok
610: Exploding the Stack Size with Alloca            ok
558: Calculator glr2.cc parse.error=verbose %debug %name-prefix "calc" %verbose  ok
560: Calculator glr2.cc parse.error=verbose %debug %name-prefix "calc" api.token.prefix={TOK_} %verbose  ok
611: Exploding the Stack Size with Malloc            ok
551: Calculator C++ %glr-parser %header parse.error=verbose %name-prefix "calc" %verbose  ok
622: YYSTYPE typedef                                 ok
623: Early token definitions with --yacc             ok
621: Trivial grammars                                ok
624: Early token definitions without --yacc          ok
625: Braces parsing                                  ok
626: Rule Line Numbers                               ok
600: Big triangle                                    ok
631: Web2c Report                                    ok
630: Characters Escapes                              ok
632: Web2c Actions                                   ok
613: GNU AWK 3.1.0 Grammar: IELR(1)                  ok
627: Mixing %token styles                            ok
612: GNU AWK 3.1.0 Grammar: LALR(1)                  ok
552: Calculator glr2.cc %header parse.error=verbose %name-prefix "calc" %verbose  ok
633: Useless Tokens                                  ok
634: Dancer                                          ok
629: Token definitions: parse.error=verbose          ok
628: Token definitions: parse.error=detailed         ok
635: Dancer %glr-parser                              ok
641: String alias declared after use                 ok
637: Expecting two tokens                            ok
642: Extra lookahead sets in report                  ok
601: Big horizontal                                  ok
561: Calculator C++ %glr-parser %locations %header parse.error=verbose %debug %name-prefix "calc" %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
563: Calculator C++ %glr-parser %locations %header parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
640: Braced code in declaration in rules section     ok
646: parse.error=verbose overflow                    ok
638: Expecting two tokens %glr-parser                ok
645: parse.error=verbose and YYSTACK_USE_ALLOCA      ok
649: Lex and parse params: yacc.c                    ok
643: Token number in precedence declaration          ok
562: Calculator glr2.cc %locations %header parse.error=verbose %debug %name-prefix "calc" %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
654: stdio.h is not needed                           ok
655: Memory Leak for Early Deletion                  ok
657: Unsupported Skeletons                           ok
650: Lex and parse params: glr.c                     ok
636: Dancer lalr1.cc                                 ok
615: GNU Cim Grammar: LALR(1)                        ok
616: GNU Cim Grammar: IELR(1)                        ok
644: parse-gram.y: LALR = IELR                       ok
618: GNU pic (Groff 1.18.1) Grammar: LALR(1)         ok
639: Expecting two tokens lalr1.cc                   ok
656: Multiple impure instances                       ok
658: Pstate reuse                                    ok
564: Calculator glr2.cc %locations %header parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
565: Calculator C++ %glr-parser %no-lines %locations %header parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
661: Multiple occurrences of $n and api.value.automove ok
672: Doxygen Public Documentation                    skipped (c++.at:794)
619: GNU pic (Groff 1.18.1) Grammar: IELR(1)         ok
648: LAC: Memory exhaustion                          ok
651: Lex and parse params: lalr1.cc                  ok
652: Lex and parse params: glr.cc                    ok
673: Doxygen Private Documentation                   skipped (c++.at:795)
676: Syntactically invalid namespace references      ok
566: Calculator glr2.cc %no-lines %locations %header parse.error=verbose %debug api.prefix={calc} %verbose %parse-param {semantic_value *result}{int *count}{int *nerrs}  ok
653: Lex and parse params: glr2.cc                   ok
614: GNU AWK 3.1.0 Grammar: Canonical LR(1)          ok
647: LAC: Exploratory stack                          skipped (regression.at:1727)
609: Many lookahead tokens                           ok
620: GNU pic (Groff 1.18.1) Grammar: Canonical LR(1) ok
660: C++ Variant-based Symbols Unit Tests            ok
677: Syntax error discarding no lookahead            ok
659: C++ Locations Unit Tests                        ok
688: Java invalid directives                         ok
689: Java parser class and package names             skipped (java.at:188)
671: Variants and Typed Midrule Actions              ok
690: Java parser class modifiers                     skipped (java.at:219)
691: Java parser class extends and implements        skipped (java.at:289)
692: Java %parse-param and %lex-param                skipped (java.at:309)
693: Java throws specifications                      skipped (java.at:441)
694: Java constructor init and init_throws           skipped (java.at:475)
695: Java value, position, and location types        skipped (java.at:499)
696: Java syntax error handling without error token  skipped (java.at:580)
698: Trivial Push Parser with %initial-action        skipped (javapush.at:230)
697: Trivial Push Parser with api.push-pull verification skipped (javapush.at:207)
699: D parser class extends and implements           skipped (d.at:106)
700: D parser class api.token.raw true by default    skipped (d.at:141)
686: Shared locations                                ok
701: GLR: Resolve ambiguity, impure, no locations    ok
702: GLR: Resolve ambiguity, impure, locations       ok
703: GLR: Resolve ambiguity, pure, no locations      ok
704: GLR: Resolve ambiguity, pure, locations         ok
705: GLR: Merge conflicting parses, impure, no locations ok
706: GLR: Merge conflicting parses, impure, locations ok
707: GLR: Merge conflicting parses, pure, no locations ok
708: GLR: Merge conflicting parses, pure, locations  ok
709: GLR: Verbose messages, resolve ambiguity, impure, no locations ok
682: Exception safety without error recovery         ok
710: Badly Collapsed GLR States: glr.c               ok
681: Exception safety with error recovery            ok
713: Improper handling of embedded actions and dollar(-N) in GLR parsers: glr.c ok
711: Badly Collapsed GLR States: glr.cc              ok
679: Syntax error as exception: glr.cc               ok
678: Syntax error as exception: lalr1.cc             ok
716: Improper merging of GLR delayed action sets: glr.c ok
714: Improper handling of embedded actions and dollar(-N) in GLR parsers: glr.cc ok
683: Exception safety with error recovery api.value.type=variant ok
712: Badly Collapsed GLR States: glr2.cc             ok
717: Improper merging of GLR delayed action sets: glr.cc ok
719: Duplicate representation of merged trees: %union { char *ptr; } glr.c ok
722: Duplicate representation of merged trees: api.value.type=union glr.c ok
687: Default action                                  ok
720: Duplicate representation of merged trees: %union { char *ptr; } glr.cc ok
718: Improper merging of GLR delayed action sets: glr2.cc ok
725: User destructor for unresolved GLR semantic value: glr.c ok
715: Improper handling of embedded actions and dollar(-N) in GLR parsers: glr2.cc ok
685: C++ GLR parser identifier shadowing             ok
617: GNU Cim Grammar: Canonical LR(1)                ok
663: Variants lalr1.cc parse.assert                  ok
728: User destructor after an error during a split parse: glr.c ok
723: Duplicate representation of merged trees: api.value.type=union glr.cc ok
731: Duplicated user destructor for lookahead: glr.c ok
666: Variants lalr1.cc parse.assert %code {\n#define TWO_STAGE_BUILD\n} ok
667: Variants lalr1.cc parse.assert api.token.constructor ok
721: Duplicate representation of merged trees: %union { char *ptr; } glr2.cc ok
734: Incorrectly initialized location for empty right-hand side in GLR: glr.c ok
662: Variants lalr1.cc                               ok
726: User destructor for unresolved GLR semantic value: glr.cc ok
732: Duplicated user destructor for lookahead: glr.cc ok
664: Variants lalr1.cc parse.assert api.value.automove ok
729: User destructor after an error during a split parse: glr.cc ok
740: Corrupted semantic options if user action cuts parse: glr.c ok
737: No users destructors if stack 0 deleted: glr.c  ok
724: Duplicate representation of merged trees: api.value.type=union glr2.cc ok
669: Variants lalr1.cc parse.assert api.token.constructor api.token.prefix={TOK_} %locations ok
665: Variants lalr1.cc parse.assert %locations       ok
735: Incorrectly initialized location for empty right-hand side in GLR: glr.cc ok
743: Undesirable destructors if user action cuts parse: glr.c ok
727: User destructor for unresolved GLR semantic value: glr2.cc ok
670: Variants lalr1.cc parse.assert api.token.constructor api.token.prefix={TOK_} %locations api.value.automove ok
730: User destructor after an error during a split parse: glr2.cc ok
668: Variants lalr1.cc parse.assert api.token.constructor api.token.prefix={TOK_} ok
746: Leaked semantic values if user action cuts parse: glr.c ok
733: Duplicated user destructor for lookahead: glr2.cc ok
738: No users destructors if stack 0 deleted: glr.cc ok
749: Incorrect lookahead during deterministic GLR: glr.c ok
684: Exception safety without error recovery api.value.type=variant ok
752: Incorrect lookahead during nondeterministic GLR: glr.c ok
741: Corrupted semantic options if user action cuts parse: glr.cc ok
758: Leaked lookahead after nondeterministic parse syntax error: glr.c ok
744: Undesirable destructors if user action cuts parse: glr.cc ok
764: Missed %merge type warnings when LHS type is declared later: glr.c ok
755: Leaked semantic values when reporting ambiguity: glr.c ok
765: Missed %merge type warnings when LHS type is declared later: glr.cc ok
766: Missed %merge type warnings when LHS type is declared later: glr2.cc ok
747: Leaked semantic values if user action cuts parse: glr.cc ok
736: Incorrectly initialized location for empty right-hand side in GLR: glr2.cc ok
680: Syntax error as exception: glr2.cc              ok
750: Incorrect lookahead during deterministic GLR: glr.cc ok
761: Uninitialized location when reporting ambiguity: glr.c api.pure ok
739: No users destructors if stack 0 deleted: glr2.cc ok
745: Undesirable destructors if user action cuts parse: glr2.cc ok
742: Corrupted semantic options if user action cuts parse: glr2.cc ok
753: Incorrect lookahead during nondeterministic GLR: glr.cc ok
756: Leaked semantic values when reporting ambiguity: glr.cc ok
767: Ambiguity reports: glr.c                        ok
759: Leaked lookahead after nondeterministic parse syntax error: glr.cc ok
770: Predicates: glr.c                               ok
748: Leaked semantic values if user action cuts parse: glr2.cc ok
751: Incorrect lookahead during deterministic GLR: glr2.cc ok
762: Uninitialized location when reporting ambiguity: glr.cc ok
754: Incorrect lookahead during nondeterministic GLR: glr2.cc ok
757: Leaked semantic values when reporting ambiguity: glr2.cc ok
760: Leaked lookahead after nondeterministic parse syntax error: glr2.cc ok
768: Ambiguity reports: glr.cc                       ok
771: Predicates: glr.cc                              ok
772: Predicates: glr2.cc                             ok
763: Uninitialized location when reporting ambiguity: glr2.cc ok
769: Ambiguity reports: glr2.cc                      ok
674: Relative namespace references                   ok
675: Absolute namespace references                   ok

## ------------- ##
## Test results. ##
## ------------- ##

683 tests were successful.
89 tests were skipped.
make[3]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
make[2]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
make[1]: Leaving directory '/usr/oppai/base/bison-3.8.1/build'
